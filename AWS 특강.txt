AWS 특강
AI 사용하지 않으면 뒤처지게 된다
주차장, 톨게이트 공통점 - 단순 반복 예외 없음
클라우드 잘하는 사람, 플랫폼에서 생각한 걸 그대로 구현할 수 있는 사람
선행하지 않으면 취업할 수 없다
교육하지 않아도 일 할 수 있는 사람을 필요로 한다

클라우드 컴퓨팅은 인터넷을 통해 연결된 IT 자원을 '필요한 만큼 사용하고',
'사용한 만큼 지불하는' 방식으로 이용하는 것을 의미한다

다양한 유형, 규모, 산업의 기업, 조직에서 데이터 백업, 재해복구, 소프트웨어 개발, 빅데이터 분석, 머신러닝 및 인공지능 등을 위해 클라우드를 사용하고 있다

일본은 자연재해때문에 클라우드 발달 잘 되어있다 - 날아가면 곤란
한국은 분단국가이기때문에 발달이 느리다 - 해킹 가능성

전통적인 IT환경 data center (on-premise)
데이터센터 내 IT 자원을 운영하기 위해서는

data center 자원 증설
데이터센터에 새로운 IT자원을 도입할 때 상면(공간, 전력), 냉방용량 등 확장성 제약을 고려해야한다
새로운 하드웨어 구매 프로세스부터 입고, 설치 및 업무에

Cloud의 자원 증설
클라우드 환경에서는 상면의 제약에 구애받지 않고 필요한 때에 IT 리소스를 신속하게 증설 가능

클라우드를 통한 비용 절감
기존 IT 환경에서는 향후 N년간의 수요를 바탕으로 IT자원에 투자하며, 예측의 정확성에 따라 투자 효율성이 좌우됩니다
클라우드 환경에서는 수요  변동에 맞춰 자원을 배치하므로 효율성 증가, 비용 절감이 가능하다

초기 투자 비용

오ㅐ 많은 기업들이 클라우드를 도입할까
비즈니스의 신속한 도입/확장
투자->비용 전환, 사용한 만큼 지불로 비용 절감
비즈니스 환경변화에 유연하고 탄력적으로 대응
새로운 기술을 끊임없이 적용, 기업의 혁신 지원
클라우드 통해 글로벌 리전으로의 손쉬운 확장

전통 IT 강자의 세대교체(차세대 -> cloud migration)
계열사 중심의 IT 프로젝트 -> DNB 중심의 IT 프로젝스

무엇을 다루고 어떤 개발을 할지 정하기
대기업 선호 안 함 재미없음

IT 붐의 시작?
인력으로 돌아가는
인건비
일을 많이하고 매출이 많아짐
게임회사부터 시작
전세계에 판매
효율적
판교에서 엔지니어 흡수
연봉 높아짐
언어(외국어)

영어

IT직군
데이터 관리자 및 아키텍트
정보 보안 애널리스트
소프트웨어 개발자
네트워크 및  컴퓨터 시스템 관리자
컴퓨터 프로그래머
웹 개발자
컴퓨터 및 정보 시스템 관리자
시스템 애널리스트
헬프데스크 및 데스크톱 지원 전문가
네트워크/클라우드 아키텍트

솔루션 아키텍트

api란 무엇인가

app_token = 'xapp-1-A05T701FGKX-5950941491344-1bf90237f65a8105977feeda0982ffd06971f02fc17a06326ab149f0d09bf3b2'
bot_token = 'xapp-1-A05T701FGKX-5950941491344-1bf90237f65a8105977feeda0982ffd06971f02fc17a06326ab149f0d09bf3b2'

aws slack ip 연동해서 챗봇 만들기
3개월 안에 따겠다고 한다,,,,,,,,,,


HYWU_011:~/environment $ python3 test.py
  File "test.py", line 14
    say(f'hello! <@{event["user"]}>')
                                    ^
TabError: inconsistent use of tabs and spaces in indentation
HYWU_011:~/environment $ 
HYWU_011:~/environment $ pip install_bolt
ERROR: unknown command "install_bolt" - maybe you meant "install"
HYWU_011:~/environment $ pip install slack_bolt
Defaulting to user installation because normal site-packages is not writeable
Collecting slack_bolt
  Downloading slack_bolt-1.18.0-py2.py3-none-any.whl (194 kB)
     |████████████████████████████████| 194 kB 10.1 MB/s 
Collecting slack-sdk<4,>=3.21.2
  Downloading slack_sdk-3.22.0-py2.py3-none-any.whl (281 kB)
     |████████████████████████████████| 281 kB 12.0 MB/s 
Installing collected packages: slack-sdk, slack-bolt
Successfully installed slack-bolt-1.18.0 slack-sdk-3.22.0
HYWU_011:~/environment $ python3 test.py
⚡ Bolt app is running!
Unhandled request ({'type': 'event_callback', 'event': {'type': 'message', 'subtype': 'channel_join'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'message', 'subtype': 'channel_join'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

lanUnhandled request ({'type': 'event_callback', 'event': {'type': 'message', 'subtype': 'channel_join'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

lanch







Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

event: {'client_msg_id': '14764402-39a8-46b1-b594-784a1fef380f', 'type': 'app_mention', 'text': '<@U05T39C83GW> hello', 'user': 'U05TNDKJFDX', 'ts': '1695281207.408169', 'blocks': [{'type': 'rich_text', 'block_id': 'Tsh=', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'user', 'user_id': 'U05T39C83GW'}, {'type': 'text', 'text': ' hello'}]}]}], 'team': 'T05TYQ22QSC', 'channel': 'C05SV99KENB', 'event_ts': '1695281207.408169'}
client: <slack_sdk.web.client.WebClient object at 0x7f0afbcc9490>
message: None
Failed to run listener function (error: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'})
Traceback (most recent call last):
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/thread_runner.py", line 120, in run_ack_function_asynchronously
    listener.run_ack_function(request=request, response=response)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/custom_listener.py", line 56, in run_ack_function
    this_func=self.ack_function,
  File "test.py", line 14, in who_am_i
    say(f'hello! <@{event["user"]}>')
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/context/say/say.py", line 66, in __call__
    **kwargs,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/client.py", line 2476, in chat_postMessage
    return self.api_call("chat.postMessage", json=kwargs)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 156, in api_call
    return self._sync_send(api_url=api_url, req_args=req_args)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 194, in _sync_send
    additional_headers=headers,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 316, in _urllib_api_call
    status_code=response["status"],
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/slack_response.py", line 199, in validate
    raise e.SlackApiError(message=msg, response=self)
slack_sdk.errors.SlackApiError: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'}
Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

python3 test.py


^CTraceback (most recent call last):
  File "test.py", line 21, in <module>
    SocketModeHandler(app, config.app_token).start()
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/adapter/socket_mode/base_handler.py", line 57, in start
    Event().wait()
  File "/usr/lib64/python3.7/threading.py", line 552, in wait
    signaled = self._cond.wait(timeout)
  File "/usr/lib64/python3.7/threading.py", line 296, in wait
    waiter.acquire()
KeyboardInterrupt
HYWU_011:~/environment $ python3 test2.py
Traceback (most recent call last):
  File "test2.py", line 1, in <module>
    import compile
ModuleNotFoundError: No module named 'compile'
HYWU_011:~/environment $ pip install compile
Defaulting to user installation because normal site-packages is not writeable
Collecting compile
  Downloading compile-1.0.3.tar.gz (6.0 kB)
Using legacy 'setup.py install' for compile, since package 'wheel' is not installed.
Installing collected packages: compile
    Running setup.py install for compile ... done
Successfully installed compile-1.0.3
HYWU_011:~/environment $ python3 test2.py
⚡ Bolt app is running!
Unhandled request ({'type': 'event_callback', 'event': {'type': 'message', 'subtype': 'channel_join'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Failed to run listener function (error: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'})
Traceback (most recent call last):
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/thread_runner.py", line 120, in run_ack_function_asynchronously
    listener.run_ack_function(request=request, response=response)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/custom_listener.py", line 56, in run_ack_function
    this_func=self.ack_function,
  File "test2.py", line 27, in ask_humor
    say(phrase2[random_int])
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/context/say/say.py", line 66, in __call__
    **kwargs,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/client.py", line 2476, in chat_postMessage
    return self.api_call("chat.postMessage", json=kwargs)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 156, in api_call
    return self._sync_send(api_url=api_url, req_args=req_args)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 194, in _sync_send
    additional_headers=headers,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 316, in _urllib_api_call
    status_code=response["status"],
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/slack_response.py", line 199, in validate
    raise e.SlackApiError(message=msg, response=self)
slack_sdk.errors.SlackApiError: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'}
Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Failed to run listener function (error: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'})
Traceback (most recent call last):
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/thread_runner.py", line 120, in run_ack_function_asynchronously
    listener.run_ack_function(request=request, response=response)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/custom_listener.py", line 56, in run_ack_function
    this_func=self.ack_function,
  File "test2.py", line 27, in ask_humor
    say(phrase2[random_int])
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/context/say/say.py", line 66, in __call__
    **kwargs,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/client.py", line 2476, in chat_postMessage
    return self.api_call("chat.postMessage", json=kwargs)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 156, in api_call
    return self._sync_send(api_url=api_url, req_args=req_args)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 194, in _sync_send
    additional_headers=headers,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 316, in _urllib_api_call
    status_code=response["status"],
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/slack_response.py", line 199, in validate
    raise e.SlackApiError(message=msg, response=self)
slack_sdk.errors.SlackApiError: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'}
Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Failed to run listener function (error: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'})
Traceback (most recent call last):
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/thread_runner.py", line 120, in run_ack_function_asynchronously
    listener.run_ack_function(request=request, response=response)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/listener/custom_listener.py", line 56, in run_ack_function
    this_func=self.ack_function,
  File "test2.py", line 27, in ask_humor
    say(phrase2[random_int])
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_bolt/context/say/say.py", line 66, in __call__
    **kwargs,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/client.py", line 2476, in chat_postMessage
    return self.api_call("chat.postMessage", json=kwargs)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 156, in api_call
    return self._sync_send(api_url=api_url, req_args=req_args)
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 194, in _sync_send
    additional_headers=headers,
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/base_client.py", line 316, in _urllib_api_call
    status_code=response["status"],
  File "/home/ec2-user/.local/lib/python3.7/site-packages/slack_sdk/web/slack_response.py", line 199, in validate
    raise e.SlackApiError(message=msg, response=self)
slack_sdk.errors.SlackApiError: The request to the Slack API failed. (url: https://www.slack.com/api/chat.postMessage)
The server responded with: {'ok': False, 'error': 'not_allowed_token_type'}
Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

Unhandled request ({'type': 'event_callback', 'event': {'type': 'app_mention'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("app_mention")
def handle_app_mention_events(body, logger):
    logger.info(body)

